// Author: Kyohei Maeda

//aspect-ratio fixed box
//==================================================
@mixin aspect-ratio($width, $height) {
	position: relative;
	&:before{
		display: block;
		content: " ";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> .content {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

//font-size with rem
//==================================================
@mixin font-size($size: 14) {
	font-size: $size + px;
	font-size: ($size / 10)  + rem;
}

@mixin my_menu_effect($items, $delay, $direct) {
	@each $item in $items {
		&:nth-child(#{$item}) {
			@include transition_c(#{$delay}ms, 'delay');
		}

		@if ($direct == "open") {
			$delay: $delay + 50;
		} @else {
			$delay: $delay - 50;
		}
	}
}

$browser_prefix: ("-webkit-", "-moz-", "-ms-", "-o-", "");

@mixin transition_c ($content, $opt: "") {
	@each $prefix in $browser_prefix {
		@if ($opt == "") {
			#{$prefix}transition: $content;
		} @else {
			#{$prefix}transition-#{$opt}: $content;
		}
	}
}

@mixin transform_c ($content) {
	@each $prefix in $browser_prefix {
		#{$prefix}transform: $content;
	}
}

@mixin calc-css ($prefix, $content) {
    #{$prefix}: -webkit-calc($content);
    #{$prefix}: -moz-calc($content);
    #{$prefix}: calc($content);
}

@mixin border ($content, $side: "") {
	@if ($side == "") {
		border: #{$content};
	} @else {
		border-#{$side}: #{$content};
	}
}

@mixin border-radius ($radius, $side: "") {
	@if ($side == "" ) {
		-webkit-border-radius: $radius;
		-moz-border-radius: $radius;
		border-radius: $radius;
	} @else {
		-webkit-border-#{$side}-radius: $radius;
		-moz-border-#{$side}-radius: $radius;
		border-#{$side}-radius: $radius;
	}
}

//clearfix
//==================================================
@mixin clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

//set width height
//@include setwh(10px, 10px);
//==================================================
@mixin setwh($w, $h) {
	height: $h;
	width: $w;
}

//set font-size (font-size, letter-spacing, line-height)
//@include setft(10, 10px, 10px);
//==================================================
@mixin setft($size: 14, $lts: 1, $lhn: 1) {
	font-size: $size + px;
	font-size: ($size / 10)  + rem;
	letter-spacing: $lts;
	line-height: $lhn;
}

//set center
//@include setcenter;
//==================================================
@mixin setcenter {
	position: absolute;
	margin: 0 auto;
	right: 0;
	left: 0;
	top: 50%;
	transform: translate(0, -50%);
	-webkit-transform: translate(0, -50%);
	-moz-transform: translate(0, -50%);
	-ms-transform: translate(0, -50%);
}

/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
/// https://jsfiddle.net/tuonglaiviet/dt7f6149/7/
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
 
  // Output standard non-prefixed declaration
  #{$property}: $value;
}
